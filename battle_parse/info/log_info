Following is an attempt to dissect and comprehend the verbose
battle log structure.

------------------------------------------------------------------- joinbattle flow

- marks something that doesn't actually repeat

    com.cardhunter.battle.Battle
    com.cardhunter.battle.commands.PlayersPresentCommand
    com.cardhunter.battle.commands.StartTurnCommand
    com.cardhunter.battle.Board
    com.cardhunter.battle.Square (Repeat xN)
    com.cardhunter.battle.Doodad (Repeat xM)
    {
    com.cardhunter.battle.Player
    {
    com.cardhunter.battle.ActorGroup
    com.cardhunter.battle.ActorInstance
   -com.cardhunter.battle.Participant
    com.cardhunter.battle.Hand
    com.cardhunter.battle.DiscardPile
    com.cardhunter.battle.DeckInstance
    com.cardhunter.battle.CardInstance (Repeat x36)
    } (Repeat x3)
    } (Repeat x2)

------------------------------------------------------------------- Extension Response Types

? means a value may or may not be available.

startBattle     # Doesn't seem to convey any useful information (appears exactly once directly following joinbattle)

done            # Doesn't seem to convey any useful information

genRand         # Generated random number
    values: RAND

reconnect       # A player rejoins the battle
    player_index: PUI

forceLoss       # A player resigns
    player_index: PUI

deckPeeksSent   # A deckPeeks was sent

handPeeksSent   # A handPeeks was sent

deckPeeks       # A card is drawn from deck
    card_info: DP/peeks/0/

handPeeks       # An card is created and placed in hand
    card_info: HP/peeks/*/

action          # A character plays a card
    target_player_indices: TARP
    target_group_indices:  TARG
    card_info:             HP/peeks/0/

selectCard      # A player selects a card to discard
    selected_card_index: sel
   ?selected_card_info:  HP/peeks/0/

selectCards     # Some cards are selected by the server (e.g. blind rage, ouch!, boiling armor, perplexing ray)
   ?selected_player_indices: SELP
   ?selected_group_indices:  SELG
   ?selected_card_indices:   SELCC

selectSquare    # A square is selected
    x:  TARX   # target x
    y:  TARY   # target y
    fx: TARFX  # target facing x
    fy: TARFY  # target facing y

target          # A target is selected for an action (step attacks cause this type)
    target_player_indices: TARP
    target_group_indices:  TARG

triggerFail or  # A reaction fails to trigger
triggerSucceed  # A reaction successfully triggers
    location:      TCLOC    # 0=hand, 1=attached, 2=terrain
   ?player_index:  PUI      # when TCLOC=0,1
   ?group_index:   ACTG     # when TCLOC=0,1
   ?card_index:    ACTC     # when TCLOC=0
   ?x:             TARX     # when TCLOC=2
   ?y:             TARY     # when TCLOC=2
    die_roll:      TROLL
    required_roll: TTHRESH  # -1=0?
    keep:          DTHRESH  # -1=0?, 0=keep, 8=discard
    hard_to_block: TPEN
    easy_to_block: TBON     # e.g. Reaching Swing

hasTrait        # A player must play a trait
    player_index: PUI

noMoreTraits    # A player finishes playing traits

mustDiscard     # A character must discard
    player_index: PUI
    group_index:  ACTG
    quantity:     DISCC

noMoreDiscards  # A player finishes discarding

pass            # A player passes (only shows when the enemy passes)

------------------------------------------------------------------- General Remarks

IIU=true iff __[[REQUESTID]]__ exists. Indicates a response to a client request (i.e., a player took an action that had to be sent to the server).
type=deckPeeks implies card owner is user.
SENDID exists iff type=deckPeeks. Value of SENDID is [i] where i is user index.
Enemy racial movement isn't explicitly mentioned when drawn; all you see is "handPeeksSent".
Normal battle logs may be out of sync with verbose battle logs.

------------------------------------------------------------------- Card Parameters

Parameters:
    IUID: internal(?) user id (userID in class com.cardhunter.battle.Player)
    TARG: target character indices
    TARP: corresponding target player indices
    TARA: ?
    ACTC: = HP/peeks/0/card
    ACTG: = HP/peeks/0/group (or is it cownerg?)
    INST: ? seems to always be 0
    type: action=play, selectCard=select to discard, handPeeks=peek card from hand, deckPeeks=peek card in deck.
    HP: Hand Peeks
        peeks:
            origin: ItemType
            owner: 0 or 1 is the player index
            cownerp: 0 or 1 is the original player index
            type: CardType
            cownerg: 0, 1, or 2 is the original character index
            group: 0, 1, or 2 is the character index
            card: 0, 1, ... is the card index in hand

------------------------------------------------------------------- Trigger Parameters

Parameters:
    type: triggerSucceed or triggerFail, whether the trigger happened
    TROLL: die roll (1, ..., 6)
    TPEN: (penalty?) hard to block (0, 1, 2, 3)
    DPEN: ? seems to always equal TPEN
    TBON: easy to block, such as reaching swing (0, 1, 2, 3)
    DBON: ? seems to always equal TBON
    TTHRESH: "trigger threshhold", the minimum die roll to trigger
    DTHRESH: "discard threshhold", 0=keep, 8=discard (?if in hand)
    TCLOC: "trigger card location" (0=hand->peek, 1=attached, 2=terrain)
    PUI: player index
    ACTG: group index
    ACTC: card index in hand (if in hand)
    TARA: ?
    TARP: ?
    TARG: ?
    TRGA: ? seems to always equal 0 (guess: actor index within a group)
    TRGP: ? seems to always equal PUI
    TRGG: ? seems to always equal ACTG
    TRID: ? seems to always be 0, 1, 2, or 3
    ALTT: ? seems to always be false
    ATTA: ? seems to always be 0
    ATTAI: ? seems to always be 0, 1, 2

------------------------------------------------------------------- genRand

Every instance of genRand being used to determine an option out of several options is of this form:
1) Order the options somehow.
2) option_index = floor(rand * (# options))


Traveling Curse: Which enemy group's deck will the curse travel to?
    Order of groups: Increasing group index, excluding dead groups.

Maze: Which square will the affected character be placed on?
    First random value is square
    Second random value is facing

    Order of squares: increasing x and then increasing y, excluding blocked and impassible terrain.
    Order of facings: (1,0), (0,1), (-1,0), (0,-1)

Whirlwind (or Whirlwind Enemies): Which square will each affected character be placed on?
    There is an even number of rands. They are in pairs, where each pair is like Maze.
    Random value pairs are assigned to groups by increasing player index and then increasing group index.

-------------------------------------------------------------------

